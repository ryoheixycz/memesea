--[[
  Dev: YourName
  Game: Roblox-MemeSea
  UI: Orion Library
]]

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local _wait = task.wait
repeat _wait() until game:IsLoaded()
local _env = getgenv and getgenv() or {}

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local rs_Monsters = ReplicatedStorage:WaitForChild("MonsterSpawn")
local Modules = ReplicatedStorage:WaitForChild("ModuleScript")
local OtherEvent = ReplicatedStorage:WaitForChild("OtherEvent")
local Monsters = workspace:WaitForChild("Monster")

local MQuestSettings = require(Modules:WaitForChild("Quest_Settings"))
local PlayerData = Player:WaitForChild("PlayerData")
local PlayerLevel = PlayerData:WaitForChild("Level")

local CFrame_Angles = CFrame.Angles
local CFrame_new = CFrame.new
local Vector3_new = Vector3.new

local Loaded, Funcs = {}, {} do
  Loaded.Quests = {}
  for Npc, Quest in pairs(MQuestSettings) do
    if workspace:WaitForChild("Location"):WaitForChild("QuestLocaion"):FindFirstChild(Npc) then
      table.insert(Loaded.Quests, {
        Level = Quest.LevelNeed,
        Enemy = Quest.Target,
        QuestPos = workspace.Location.QuestLocaion[Npc].CFrame,
        EnemyPos = workspace.Location.Enemy_Location[Quest.Target].CFrame,
        NpcName = Npc
      })
    end
  end
  table.sort(Loaded.Quests, function(a, b) return a.Level > b.Level end)
end

local Settings = {} do
  Settings.FarmDistance = 8
  Settings.AutoClick = true
  Settings.FarmCFrame = CFrame_new(0, Settings.FarmDistance, 0) * CFrame_Angles(math.rad(-90), 0, 0)
end

local function PlayerClick()
  if Settings.AutoClick then
    VirtualUser:CaptureController()
    VirtualUser:Button1Down(Vector2.new(1e4, 1e4))
  end
end

local function IsAlive(Char)
  local Hum = Char and Char:FindFirstChild("Humanoid")
  return Hum and Hum.Health > 0
end

local function GetNextEnemie(EnemieName)
  for _, v in ipairs(Monsters:GetChildren()) do
    if (not EnemieName or v.Name == EnemieName) and IsAlive(v) then
      return v
    end
  end
  return false
end

local function GoTo(CFrame, Move)
  local Char = Player.Character
  if IsAlive(Char) then
    return Move and (Char:MoveTo(CFrame.p) or true) or Char:SetPrimaryPartCFrame(CFrame)
  end
end

local function EquipWeapon()
  local Backpack, Char = Player:FindFirstChild("Backpack"), Player.Character
  if IsAlive(Char) and Backpack then
    for _, v in ipairs(Backpack:GetChildren()) do
      if v:IsA("Tool") then
        Char.Humanoid:EquipTool(v)
      end
    end
  end
end

local function KillMonster(EnemieName)
  local Enemie = GetNextEnemie(EnemieName)
  if IsAlive(Enemie) and Enemie.PrimaryPart then
    GoTo(Enemie.PrimaryPart.CFrame * Settings.FarmCFrame)
    EquipWeapon()
    PlayerClick()
    return true
  end
end

local function TakeQuest(QuestName, CFrame, Wait)
  local QuestGiver = workspace.NPCs.Quests_Npc:FindFirstChild(QuestName)
  if QuestGiver and Player:DistanceFromCharacter(QuestGiver.WorldPivot.p) < 5 then
    return fireproximityprompt(QuestGiver.Block.QuestPrompt), _wait(Wait or 0.1)
  end
  GoTo(CFrame or workspace.Location.QuestLocaion[QuestName].CFrame)
end

local function ClearQuests(Ignore)
  for _, v in ipairs(Player.QuestFolder:GetChildren()) do
    if v.QuestGiver.Value ~= Ignore and v.Target.Value ~= "None" then
      OtherEvent.QuestEvents.Quest:FireServer("Abandon_Quest", { QuestSlot = v.Name })
    end
  end
end

local function AutoFarmLevel()
  while _env.AutoFarm do
    local Quest = Loaded.Quests[1]
    if Quest.Level <= PlayerLevel.Value then
      ClearQuests(Quest.NpcName)
      TakeQuest(Quest.NpcName)
      while KillMonster(Quest.Enemy) do
        _wait()
      end
    end
    _wait(1)
  end
end

local Window = OrionLib:MakeWindow({ Name = "Meme Sea Auto Farm", HidePremium = true, SaveConfig = true, ConfigFolder = "OrionTest" })

local FarmTab = Window:MakeTab({
  Name = "Auto Farm",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

FarmTab:AddToggle({
  Name = "Auto Farm Level",
  Default = false,
  Callback = function(Value)
    _env.AutoFarm = Value
    if Value then
      task.spawn(AutoFarmLevel)
    end
  end
})

FarmTab:AddToggle({
  Name = "Auto Click",
  Default = true,
  Callback = function(Value)
    Settings.AutoClick = Value
  end
})

FarmTab:AddSlider({
  Name = "Farm Distance",
  Min = 5,
  Max = 15,
  Default = 8,
  Color = Color3.fromRGB(255,255,255),
  Increment = 1,
  ValueName = "Distance",
  Callback = function(Value)
    Settings.FarmDistance = Value
    Settings.FarmCFrame = CFrame_new(0, Value, 0) * CFrame_Angles(math.rad(-90), 0, 0)
  end
})

OrionLib:Init()

-- Anti-AFK
if not _env.AntiAfk then
  _env.AntiAfk = true
  task.spawn(function()
    while _wait(60 * 10) do
      VirtualUser:CaptureController()
      VirtualUser:ClickButton2(Vector2.new())
    end
  end)
end
